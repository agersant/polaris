on:
  push:
    tags:
    - '[0-9]+.[0-9]+.[0-9]+**'

name: Release

jobs:
  windows:
    name: Windows
    runs-on: windows-latest
    steps:
    - name: Checkout Polaris
      uses: actions/checkout@v1
      with:
        submodules: true
    - name: Install Rust Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-01-01
        profile: minimal
        default: true
    - name: Read Polaris Version
      id: version
      run: |
        POLARIS_VERSION=${GITHUB_REF:10}
        echo "::set-output name=number::$POLARIS_VERSION"
    - name: Build Installer
      run: res/windows/release_script
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.number }}
        release_name: Polaris ${{ steps.version.outputs.number }}
        draft: true
        prerelease: false
    - name: Upload Installer To Github Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/Polaris ${{ steps.version.outputs.number }}.msi
        asset_name: Polaris_${{ steps.version.outputs.number }}.msi
        asset_content_type: application/x-msi

  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Polaris
      uses: actions/checkout@v1
      with:
        submodules: true
    - name: Read Polaris Version
      id: version
      run: |
        set POLARIS_VERSION=%GITHUB_REF:*tags/=%
        echo "::set-output name=number::%POLARIS_VERSION%"
    - name: Build Archive
      run: res/unix/release_script.sh
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.number }}
        release_name: Polaris ${{ steps.version.outputs.number }}
        draft: true
        prerelease: false
    - name: Upload To Github Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/polaris-${{ steps.version.outputs.number }}.tar.gz
        asset_name: Polaris_${{ steps.version.outputs.number }}.tar.gz
        asset_content_type: application/gzip
